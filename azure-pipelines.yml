trigger:
  branches:
    include:
      - main

pool:
  vmImage: 'ubuntu-latest'

variables:
  ACR_NAME: 'backendazure'
  IMAGE_NAME: 'backend'
  TAG: '$(Build.BuildId)'
  RESOURCE_GROUP: 'aks-rg'
  AKS_NAME: 'Backend-cluster'

steps:

# Login to Azure for AKS + ACR access
- task: AzureCLI@2
  inputs:
    azureSubscription: 'docker-connection1'
    scriptType: 'bash'
    scriptLocation: 'inlineScript'
    inlineScript: |
      echo "‚úÖ Logged into Azure"
      az account show

# ACR Login using Docker Service Connection
- task: Docker@2
  displayName: Login to ACR
  inputs:
    command: login
    containerRegistry: 'docker-connection'

# Build Docker image
- task: Bash@3
  inputs:
    targetType: 'inline'
    script: |
      echo "üê≥ Building Docker Image..."
      docker build -f backend/Dockerfile -t $ACR_NAME.azurecr.io/$IMAGE_NAME:$TAG backend/



# Push Docker Image to ACR
- task: Docker@2
  displayName: Push image to ACR
  inputs:
    command: push
    containerRegistry: 'docker-connection'
    repository: $(IMAGE_NAME)
    tags: |
      $(TAG)

# Connect to AKS
- task: AzureCLI@2
  inputs:
    azureSubscription: 'docker-connection1'
    scriptType: 'bash'
    inlineScript: |
      echo "üîë Fetching AKS Credentials"
      az aks get-credentials -g $RESOURCE_GROUP -n $AKS_NAME --overwrite-existing

# Deploy to AKS using kubectl
- task: Kubernetes@1
  displayName: Deploy to AKS
  inputs:
    connectionType: Azure Resource Manager
    azureSubscriptionEndpoint: 'docker-connection1'
    azureResourceGroup: $(RESOURCE_GROUP)
    kubernetesCluster: $(AKS_NAME)
    command: apply
    useConfigurationFile: true
    configuration: |
      apiVersion: apps/v1
      kind: Deployment
      metadata:
        name: backend
      spec:
        replicas: 1
        selector:
          matchLabels:
            app: backend
        template:
          metadata:
            labels:
              app: backend
          spec:
            containers:
            - name: backend
              image: $(ACR_NAME).azurecr.io/$(IMAGE_NAME):$(TAG)
              ports:
              - containerPort: 80
